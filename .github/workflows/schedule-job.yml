name: Deploy Pull Request to Azure Web App
on:
  #schedule job every day at 1 am IST (UTC +5:30)
  schedule:
    - cron: '30 19 * * *'
  workflow_dispatch:

env:
  BRANCH_NAME: ${{ github.event.pull_request.head.ref }} # get branch name from pull request
  PR_NUMBER: ${{ github.event.pull_request.number }}
  AZURE_WEBAPP_NAME: ${{ github.event.pull_request.head.repo.name }} # add GTCRM- prefix to branch name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '18-lts'                # set this to the node version to use
  RESOURCE_GROUP: test-${{ github.event.pull_request.number }}-rg # add GTCRM- prefix to branch name
  PR_IS_OLD: false
permissions:
  contents: read
  pull-requests: write
  actions: write

jobs:
  # to get list of all 3 days old PRs
  schedule:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get list of all 3 days old PRs
        id: get-old-prs
        uses: actions/github-script@v5
        with:
          script: |
            const { data: prs } = await github.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            sort: 'updated',
            direction: 'desc',
            per_page: 100
            })
            const oldPrs = prs.filter(pr => {
            const prDate = new Date(pr.updated_at)
            const today = new Date()
            const diffTime = Math.abs(today - prDate)
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))
            return diffDays >= 3
            })
            return oldPrs.map(pr => pr.number)

      # Comment on PRs that are 3 days old
      - name: Comment on PRs that are 3 days old
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const oldPrs = ${{ steps.get-old-prs.outputs.result }}
            oldPrs.forEach(pr => {
            github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr,
                body: 'This PR is 3 days old. Please update it or it will be closed.'
            })
            })
