name: Deploy Pull Request to Azure Web App
on:
  pull_request: 
    branches: [ "develop" ]
    types: [opened, synchronize, closed]
  workflow_dispatch:

env:
  BRANCH_NAME: ${{ github.event.pull_request.head.ref }} # get branch name from pull request
  PR_NUMBER: ${{ github.event.pull_request.number }}
  AZURE_WEBAPP_NAME: ${{ github.event.pull_request.head.repo.name }} # add GTCRM- prefix to branch name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '18-lts'                # set this to the node version to use
  RESOURCE_GROUP: test-${{ github.event.pull_request.number }}-rg # add GTCRM- prefix to branch name


jobs:
  pre-build:
    if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.pull_request.draft == false 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

     # Create new resource group for the web app
    - name: Create resource group
      uses: azure/cli@v1
      with:
        inlineScript: |
          az group create --name ${{ env.RESOURCE_GROUP }} --location "Central India"

    # Create a new resource
    - name: Create App service plan
      uses: Azure/cli@v1
      with:
        inlineScript: |
          az appservice plan create --name ${{ env.AZURE_WEBAPP_NAME }}-${{ env.PR_NUMBER }}-plan --resource-group ${{ env.RESOURCE_GROUP }} --sku B1 --is-linux

    # Set the deployment slot's app setting to point to the staging slot
    - name: Set app setting
      uses: Azure/cli@v1
      with:
        inlineScript: |
          az webapp create --resource-group ${{ env.RESOURCE_GROUP }} --plan ${{ env.AZURE_WEBAPP_NAME }}-${{ env.PR_NUMBER }}-plan --name ${{ env.AZURE_WEBAPP_NAME }}-${{ env.PR_NUMBER }} --runtime "NODE:${{ env.NODE_VERSION }}" --output table
#
#
#  build:
#    runs-on: ubuntu-latest
#    needs: pre-build
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: 18.4.0
#          cache: 'npm'
#
#      # Cache node_modules
#      - name: Cache node_modules
#        uses: actions/cache@v3.1.0-beta.2
#        with:
#          path: '**/node_modules'
#          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
#
#       # Install dependencies
#      - name: Install Dependencies
#        if: steps.cache-node-modules.outputs.cache-hit != 'true'
#        run: |
#          npm install
#          npm run predeploy --if-present
#
#
#
#      # tar the build folder
#      - name: Zip Package
#        run: |
#          zip -r node-app.zip .
#
#      # Upload the zip file to the deployment slot
#      - name: Upload artifact for deployment job
#        uses: actions/upload-artifact@v3
#        with:
#          name: node-app
#          path: node-app.zip
#
## Deploy the zip file to the deployment slot
#  deploy:
#    permissions:
#      contents: read
#      pull-requests: write
#    runs-on: ubuntu-latest
#    needs: build
#    environment:
#      name: 'Development'
#
#    steps:
#    - name: Download artifact from build job
#      uses: actions/download-artifact@v3
#      with:
#        name: node-app
#
##    #Unpack the artifact
##    - name: Unzip artifact
##      run: unzip node-app.zip
#
#    - name: Login via Azure CLI
#      uses: azure/login@v1
#      with:
#        creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#    - name: 'Deploy to Azure WebApp'
#      id: deploy-to-webapp
#      uses: Azure/webapps-deploy@v2.2.5
#      with:
#        app-name: ${{ env.AZURE_WEBAPP_NAME }}-${{ env.PR_NUMBER }}
#        slot-name: 'Production'
#        package: node-app.zip