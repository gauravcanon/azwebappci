name: Deploy Pull Request to Azure Web App
on:
  pull_request:
    branches: [ "develop" ]
    types: [ opened, synchronize, closed ]
  workflow_dispatch:


env:
  BRANCH_NAME: ${{ github.event.pull_request.head.ref }} # get branch name from pull request
  PR_NUMBER: ${{ github.event.pull_request.number }}
  AZURE_WEBAPP_NAME: ${{ github.event.pull_request.head.repo.name }} # add GTCRM- prefix to branch name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '18-lts'                # set this to the node version to use
  RESOURCE_GROUP: test-${{ github.event.pull_request.number }}-rg # add GTCRM- prefix to branch name
permissions:
  contents: read
  pull-requests: write
  actions: write

jobs:
  pre-build:
    if: github.event.action == 'opened' || github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Find if same comment exist then don't create new comment
      - name: Find comment
        uses: peter-evans/find-comment@v2
        id: pr-preview-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'A preview of this Pull Request is being created.'

      # if comment exist then don't create new comment
      - name: Create comment
        if: ${{ steps.fc.outputs.comment-id == 0 }}
        uses: peter-evans/create-or-update-comment@v2.1.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.pr-preview-comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            A preview of this Pull Request is being created. Hold tight while it's building ‚öíÔ∏è  
            This comment will be automatically updated when the preview is ready.
          reactions: hooray

      # Create new resource group for the web app
      - name: Create resource group
        uses: azure/cli@v1
        with:
          inlineScript: |
            az group create --name ${{ env.RESOURCE_GROUP }} --location "Central India"

      # Create a new resource
      - name: Create App service plan
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az appservice plan create --name ${{ env.AZURE_WEBAPP_NAME }}-${{ env.PR_NUMBER }}-plan --resource-group ${{ env.RESOURCE_GROUP }} --sku B1 --is-linux

      # Set the deployment slot's app setting to point to the staging slot
      - name: Set app setting
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az webapp create --resource-group ${{ env.RESOURCE_GROUP }} --plan ${{ env.AZURE_WEBAPP_NAME }}-${{ env.PR_NUMBER }}-plan --name ${{ env.AZURE_WEBAPP_NAME }}-${{ env.PR_NUMBER }} --runtime "NODE:${{ env.NODE_VERSION }}" --output table


  build:
    runs-on: ubuntu-latest
    needs: pre-build # wait for pre-build to finish
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.4.0
          cache: 'npm'

      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v3.1.0-beta.2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      # Install dependencies
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          npm install
          npm run build --if-present

      # Upload Artifact
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: build

  # Deploy the zip file to the deployment slot
  deploy:
    if: github.event.action == 'opened'
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    needs: build # wait for build to finish
    environment:
      name: 'Development'

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Deploy to Azure WebApp'
        id: deploy-to-webapp
        uses: Azure/webapps-deploy@v2.2.5
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}-${{ env.PR_NUMBER }}
          startup-command: 'pm2 serve /home/site/wwwroot --no-daemon --spa'
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      # find comment
      - name: Find comment Deployed
        uses: peter-evans/find-comment@v2
        id: deploy-preview-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'üöÄ A preview of this Pull Request is ready.'

        # Update Comment on PR with deployment URL
      - name: 'Comment on PR with deployment URL'
        uses: peter-evans/create-or-update-comment@v2.1.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.deploy-preview-comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            üöÄ A preview of this Pull Request is ready. Click the link below to view it. 
             ${{ steps.deploy-to-webapp.outputs.webapp-url }}
             Commit ID: ${{ github.event.pull_request.head.sha }}
          reactions: rocket

      # Deploy the zip file to the deployment slot
  deploy-update:
    if: github.event.action == 'synchronize' || github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      # find comment
      - name: Find comment Deployed
        uses: peter-evans/find-comment@v2
        id: deploy-preview-comment-update
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'üöÄ A preview of this Pull Request is ready.'

        # Update Comment on PR with deployment URL
      - name: Update PR Preview Comment
        if: steps.deploy-preview-comment.outputs.comment-id != 0
        uses: peter-evans/create-or-update-comment@v2.1.0
        with:
          comment-id: ${{ steps.deploy-preview-comment-update.outputs.comment-id }}
          edit-mode: replace
          body: |
            The Pull Request preview is being updated. Hold tight while it's building ‚öíÔ∏è
            This comment will be automatically updated when the new version is ready.


      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Deploy update to Azure WebApp'
        id: deploy-to-webapp
        uses: Azure/webapps-deploy@v2.2.5
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          startup-command: 'pm2 serve /home/site/wwwroot --no-daemon --spa'
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}


      # Update comment on PR with deployment URL
      - name: Update PR Preview Comment
        uses: peter-evans/create-or-update-comment@v2.1.0
        with:
          comment-id: ${{ steps.deploy-preview-comment-update.outputs.comment-id }}
          edit-mode: replace
          body: |
            üöÄ A preview of this Pull Request is ready. Click the link below to view it.
             ${{ steps.deploy-to-webapp.outputs.webapp-url }}
             Commit ID: ${{ github.event.pull_request.head.sha }}
          reactions: rocket


    #  # Delete Resources once PR is closed
    #  delete-resources:
    #    if: ${{ github.event.pull_request.merged == true || github.event.pull_request.state == 'closed' }}
    #    runs-on: ubuntu-latest
    #    needs: deploy
    #    environment:
    #    name: 'Development'
    #    url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    #
    #    steps:
    #      - name: Login via Azure CLI
    #        uses: azure/login@v1
    #        with:
    #        creds: ${{ secrets.AZURE_CREDENTIALS }}
    #
    #      # Delete resource group and webapp
    #      - name: Delete Resource Group
    #        uses: azure/CLI@v1
    #        with:
    #        inlineScript: |
    #          az group delete --name ${{ env.AZURE_RESOURCE_GROUP }}-${{ env.PR_NUMBER }} --yes
    #
    #      # find previous comment
    #      - name: Find comment Deployed
    #        uses: peter-evans/find-comment@v2
    #        id: deploy-preview-comment
    #        with:
    #          issue-number: ${{ github.event.pull_request.number }}
    #          comment-author: 'github-actions[bot]'
    #          body-includes: 'üöÄ A preview of this Pull Request is ready.'
    #
    #      # Update found comment with new content
    #      - name: Delete Comment
    #        if: steps.deploy-preview-comment.outputs.comment-id != 0
    #        uses: peter-evans/create-or-update-comment@v2.1.0
    #        with:
    #          comment-id: ${{ steps.deploy-preview-comment-update.outputs.comment-id }}
    #          edit-mode: replace
    #          body: |
    #            üèÅ The preview of this Pull Request has been deleted.
    
